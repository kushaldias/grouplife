{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 9d4b8a4424efa35b14bf","webpack:///./src/index.ts","webpack:///./src/ng2-parallax-scroll.directive.ts","webpack:///external \"@angular/core\"","webpack:///./src/ng2-parallax-scroll.module.ts","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/common\""],"names":[],"mappings":"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","file":"ng2-parallax-scroll.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-parallax-scroll\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"ng2-parallax-scroll\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9d4b8a4424efa35b14bf","import { Ng2ParallaxScrollDirective} from \"./ng2-parallax-scroll.directive\";\nimport { Ng2ParallaxScrollModule} from \"./ng2-parallax-scroll.module\";\n\nexport {\n  Ng2ParallaxScrollDirective,\n  Ng2ParallaxScrollModule\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/index.ts","import { ViewContainerRef, Directive } from '@angular/core';\n\n@Directive({\n  selector: '[ng2-parallax], ng2-parallax'\n})\nexport class Ng2ParallaxScrollDirective {\n  \n  el: HTMLElement;\n  img: HTMLImageElement;\n  imgOrgWidth: any;\n  imgOrgHeight: any;\n  \n  constructor(private viewContainer: ViewContainerRef) {\n    this.el = this.viewContainer.element.nativeElement;\n  }\n  \n  ngAfterViewInit() {\n    this.img = <HTMLImageElement>this.el.querySelector(\"img\");\n    this.img.onload = () => {\n      this.imgOrgWidth = this.imgOrgWidth || this.img.offsetWidth;\n      this.imgOrgHeight = this.imgOrgHeight || this.img.offsetHeight;\n      console.log(this.img.offsetWidth, this.img.offsetHeight, this.img.width, this.img.height);\n\n      this.setParallaxImage();\n      this.updateParallaxImage();\n      window.addEventListener('scroll', () => {\n        this.updateParallaxImage();\n      });\n      window.addEventListener('resize', () => {\n        this.setParallaxImage();\n        this.updateParallaxImage();\n      })\n    }\n  }\n  \n  private setParallaxImage() {\n    //set img style\n    let imgSize = this.imgOrgWidth > this.el.offsetWidth ? \n      { width : this.el.offsetWidth + 'px'} : { height : this.el.offsetHeight * 1.5 + 'px'}\n    Object.assign(this.img.style, {\n      display: 'block', position: 'absolute', bottom: 0, left: 0\n    }, imgSize);\n    \n    // set container style\n    Object.assign(this.el.style, {\n      position: 'relative', overflow: 'hidden'\n    });\n   \n    // wrap image with a div, then set style\n    var imgWrapperEl: HTMLElement = <HTMLElement>this.el.querySelector('.parallax-img-wrapper');\n    if (!imgWrapperEl) {\n      imgWrapperEl = document.createElement('div');\n      imgWrapperEl.className = 'parallax-img-wrapper';\n      imgWrapperEl.appendChild(this.img);\n      this.el.appendChild(imgWrapperEl);\n    }\n    Object.assign(imgWrapperEl.style, {\n      position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, zIndex: -1\n    });\n  }\n  \n  private updateParallaxImage(): void {\n    var elRect = this.el.getBoundingClientRect();\n    var imgRect = this.img.getBoundingClientRect();\n    \n    var imgDist = imgRect.height - elRect.height;\n    var bottom = this.el.offsetTop + elRect.height;\n    var top = this.el.offsetTop;\n    var scrollTop = document.body.scrollTop;\n    var windowBottom = scrollTop + window.innerHeight;\n    var percentScrolled =\n      (windowBottom - top) / (elRect.height + window.innerHeight);\n      //console.log(imgDist, percentScrolled, imgDist * percentScrolled);\n  \n    var parallax = Math.round((imgDist * percentScrolled));\n    if (\n      (bottom > scrollTop) && (top < (scrollTop + window.innerHeight))\n    ) {\n      this.img.style.bottom = parallax * -1 + 'px';\n      //img.style.transform = \"translate3D(0%,\" + parallax + \"px, 0)\";\n    }\n  }    \n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/ng2-parallax-scroll.directive.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 2\n// module chunks = 0","import { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule  } from '@angular/common';\n\nimport { Ng2ParallaxScrollDirective} from \"./ng2-parallax-scroll.directive\";\n\n@NgModule({\n  imports: [ CommonModule, FormsModule ],\n  declarations: [Ng2ParallaxScrollDirective],\n  exports: [ Ng2ParallaxScrollDirective ]\n})\nexport class Ng2ParallaxScrollModule {}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/ng2-parallax-scroll.module.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/forms\"\n// module id = 4\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common\"\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}